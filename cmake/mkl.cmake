if(NOT DEFINED ENV{MKL_LIB})
	message(FATAL_ERROR "MKL_LIB should be specified for this platform")
endif()

set(MKL_LIB $ENV{MKL_LIB})

set(LPREFIX ${CMAKE_STATIC_LIBRARY_PREFIX})
set(LSUFFIX ${CMAKE_STATIC_LIBRARY_SUFFIX})

if(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
	if ("${CMAKE_GENERATOR_PLATFORM}" STREQUAL "Win32")
		find_library(mkl_intel_c NAME ${LPREFIX}mkl_intel_c${LSUFFIX} PATHS ${MKL_LIB})
		if(NOT mkl_intel_c)
			message(FATAL_ERROR ${LPREFIX}mkl_intel_c${LSUFFIX} " is missing")
		endif()
	else ()
		find_library(mkl_lp64 NAME ${LPREFIX}mkl_intel_lp64${LSUFFIX} PATHS ${MKL_LIB})
		if(NOT mkl_lp64)
			message(FATAL_ERROR ${LPREFIX}mkl_intel_lp64${LSUFFIX} " is missing")
		endif()
	endif ()
else ()
	find_library(mkl_lp64 NAME ${LPREFIX}mkl_intel_lp64${LSUFFIX} PATHS ${MKL_LIB})
	if(NOT mkl_lp64)
		message(FATAL_ERROR ${LPREFIX}mkl_intel_lp64${LSUFFIX} " is missing in ${MKL_LIB}")
	endif()
endif()


find_library(mkl_seq NAME ${LPREFIX}mkl_sequential${LSUFFIX} PATHS ${MKL_LIB})
if (NOT mkl_seq)
	message(FATAL_ERROR ${LPREFIX}mkl_sequential${LSUFFIX} " is missing")
endif()
find_library(mkl_core NAME ${LPREFIX}mkl_core${LSUFFIX} PATHS ${MKL_LIB})
if (NOT mkl_core)
	message(FATAL_ERROR ${LPREFIX}mkl_core${LSUFFIX} " is missing")
endif()

if(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
	set(MKL_LINK_OPTIONS -Wl,--start-group ${mkl_lp64} ${mkl_seq} ${mkl_core} -Wl,--end-group -lpthread -lm -ldl)
elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
	set(MKL_LINK_OPTIONS ${mkl_lp64} ${mkl_seq} ${mkl_core} -lpthread -lm -ldl)
elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
	if ("${CMAKE_GENERATOR_PLATFORM}" STREQUAL "Win32")
		set(MKL_LINK_OPTIONS ${mkl_intel_c} ${mkl_seq} ${mkl_core})
	else ()
		set(MKL_LINK_OPTIONS ${mkl_lp64} ${mkl_seq} ${mkl_core})
	endif ()
endif()

add_link_options(${MKL_LINK_OPTIONS})
